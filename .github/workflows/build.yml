name: Build Multi-Platform

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: curator-linux-amd64

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: curator-linux-arm64

          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: curator-windows-amd64.exe

          - target: x86_64-apple-darwin
            os: macos-latest
            name: curator-macos-amd64

          - target: aarch64-apple-darwin
            os: macos-latest
            name: curator-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}
        env:
          CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: Prepare artifact
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/curator.exe ${{ matrix.name }}
          else
            cp target/${{ matrix.target }}/release/curator ${{ matrix.name }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}
          retention-days: 7

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            curator-linux-amd64/curator-linux-amd64
            curator-linux-arm64/curator-linux-arm64
            curator-windows-amd64.exe/curator-windows-amd64.exe
            curator-macos-amd64/curator-macos-amd64
            curator-macos-arm64/curator-macos-arm64
          body: |
            ## Installation
            Download the appropriate binary for your platform and add it to your PATH.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
